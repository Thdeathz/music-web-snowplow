collector {
  interface = "0.0.0.0"
  port = "9090"

  ssl {
    enable = false
    redirect = false
    port = 9543
  }

  p3p {
    policyRef = "/w3c/p3p.xml"
    CP = "NOI DSP COR NID PSA OUR IND COM NAV STA"
  }
  
  crossDomain {
    enabled = false
    domains = [ "*" ]
    secure = true
  }

  cookie {
    enabled = true
    expiration = "365 days"
    name = "micro"
    domains = [
        # "{{cookieDomain1}}" # e.g. "domain.com" -> any origin domain ending with this will be matched and domain.com will be returned
        # "{{cookieDomain2}}" # e.g. "secure.anotherdomain.com" -> any origin domain ending with this will be matched and secure.anotherdomain.com will be returned
        # ... more domains
    ]
    secure = false
    httpOnly = false
    # The sameSite is optional. You can choose to not specify the attribute, or you can use `Strict`,
    # `Lax` or `None` to limit the cookie sent context.
    #   Strict: the cookie will only be sent along with "same-site" requests.
    #   Lax: the cookie will be sent with same-site requests, and with cross-site top-level navigation.
    #   None: the cookie will be sent with same-site and cross-site requests.
    # sameSite = "{{cookieSameSite}}"
  }

  doNotTrackCookie {
    enabled = false
    name = ""
    value = ""
  }

  
  cookieBounce {
    enabled = false
    name = "n3pc"
    fallbackNetworkUserId = "00000000-0000-4000-A000-000000000000"
  }

  redirectMacro {
    enabled = false
    placeholder = "[TOKEN]"
  }

  rootResponse {
    enabled = false
    statusCode = 302
    headers = {
      Location = "",
      X-Custom = ""
    }
    body = "302, redirecting"
  }

  cors {
    accessControlMaxAge = 5 seconds
  }

  prometheusMetrics {
    enabled = false
  }

  streams {
    good = "good"

    bad = "bad"

    useIpAddressAsPartitionKey = false

    sink {
      enabled = stdout
    }

    buffer {
      byteLimit = 100000
      recordLimit = 40
      timeLimit = 1000
    }
  }
}

akka {
  loglevel = DEBUG # 'OFF' for no logging, 'DEBUG' for all logging.
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  http.server {
    remote-address-header = on

    raw-request-uri-header = on

    parsing {
      max-uri-length = 32768
      uri-parsing-mode = relaxed
    }
  }
}
